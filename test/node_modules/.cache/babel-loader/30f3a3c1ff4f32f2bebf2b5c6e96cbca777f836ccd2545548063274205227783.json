{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ferdd Nando\\\\Downloads\\\\ApexCharts\\\\test\\\\src\\\\chart-types\\\\line.js\";\nimport React from 'react';\nimport Chart from 'react-apexcharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LineChart = ({\n  selectedYears,\n  infoData,\n  selectedInfo,\n  handleInfoChange,\n  handleYearChange,\n  dataForApexCharts,\n  dataColors\n}) => {\n  const options = {\n    chart: {\n      height: 400,\n      type: 'line',\n      zoom: {\n        enabled: true\n      },\n      toolbar: {\n        autoSelected: 'pan',\n        show: true\n      }\n    },\n    dataLabels: {\n      enabled: true\n    },\n    stroke: {\n      width: 5,\n      curve: 'straight',\n      // stepline \n      dashArray: 0\n    },\n    title: {\n      text: 'Grafico em Linha',\n      align: 'left'\n    },\n    grid: {\n      row: {\n        colors: ['#f3f3f3', 'transparent'],\n        opacity: 0.5\n      }\n    },\n    markers: {\n      size: 0,\n      hover: {\n        sizeOffset: 6\n      }\n    },\n    xaxis: {\n      categories: selectedYears\n    },\n    colors: Object.values(dataColors),\n    legend: {\n      position: 'bottom',\n      offsetY: 40\n    },\n    fill: {\n      opacity: 1\n    }\n  };\n  const filteredDataForChart = selectedInfo.map(info => ({\n    name: info,\n    data: selectedYears.map(year => dataForApexCharts.find(item => item.nome === info)[year])\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [infoData.length > 0 && /*#__PURE__*/_jsxDEV(\"select\", {\n      multiple: true,\n      value: selectedInfo,\n      onChange: handleInfoChange,\n      children: dataForApexCharts.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: item.nome,\n        children: item.nome\n      }, item.nome, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), infoData.length > 0 && /*#__PURE__*/_jsxDEV(\"select\", {\n      multiple: true,\n      value: selectedYears,\n      onChange: handleYearChange,\n      children: infoData.filter(header => header !== 'nome').map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: year,\n        children: year\n      }, year, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 19\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      options: options,\n      series: filteredDataForChart,\n      type: \"line\",\n      height: 500,\n      width: 500\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","Chart","jsxDEV","_jsxDEV","LineChart","selectedYears","infoData","selectedInfo","handleInfoChange","handleYearChange","dataForApexCharts","dataColors","options","chart","height","type","zoom","enabled","toolbar","autoSelected","show","dataLabels","stroke","width","curve","dashArray","title","text","align","grid","row","colors","opacity","markers","size","hover","sizeOffset","xaxis","categories","Object","values","legend","position","offsetY","fill","filteredDataForChart","map","info","name","data","year","find","item","nome","children","length","multiple","value","onChange","fileName","_jsxFileName","lineNumber","columnNumber","filter","header","series","_c","$RefreshReg$"],"sources":["C:/Users/Ferdd Nando/Downloads/ApexCharts/test/src/chart-types/line.js"],"sourcesContent":["import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\n\r\nconst LineChart = ({\r\n  selectedYears,\r\n  infoData,\r\n  selectedInfo,\r\n  handleInfoChange,\r\n  handleYearChange,\r\n  dataForApexCharts,\r\n  dataColors,\r\n}) => {\r\n    const options = {\r\n        chart: {\r\n          height: 400,\r\n          type: 'line',\r\n          zoom: {\r\n            enabled: true,\r\n          },\r\n          toolbar: {\r\n            autoSelected: 'pan',\r\n            show: true\r\n          }\r\n        },\r\n        dataLabels: {\r\n          enabled: true,\r\n        },\r\n        stroke: {\r\n          width: 5,\r\n          curve: 'straight', // stepline \r\n          dashArray: 0,\r\n        },\r\n        title: {\r\n          text: 'Grafico em Linha',\r\n          align: 'left',\r\n        },\r\n        grid: {\r\n          row: {\r\n            colors: ['#f3f3f3', 'transparent'],\r\n            opacity: 0.5,\r\n          },\r\n        },\r\n    \r\n        markers: {\r\n          size: 0,\r\n          hover: {\r\n            sizeOffset: 6\r\n          }\r\n        },\r\n        xaxis: {\r\n          categories: selectedYears,\r\n        },\r\n        colors: Object.values(dataColors),\r\n        legend: {\r\n          position: 'bottom',\r\n          offsetY: 40\r\n        },\r\n        fill: {\r\n          opacity: 1\r\n        }\r\n      };\r\n    \r\n      const filteredDataForChart = selectedInfo.map((info) => ({\r\n        name: info,\r\n        data: selectedYears.map((year) =>\r\n          dataForApexCharts.find((item) => item.nome === info)[year]\r\n        ),\r\n      }));\r\n    \r\n      return (\r\n        <div>\r\n    \r\n          {infoData.length > 0 && (\r\n            <select multiple value={selectedInfo} onChange={handleInfoChange}>\r\n              {dataForApexCharts.map((item) => (\r\n                <option key={item.nome} value={item.nome}>\r\n                  {item.nome}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          )}\r\n    \r\n          {infoData.length > 0 && (\r\n            <select multiple value={selectedYears} onChange={handleYearChange}>\r\n              {infoData\r\n                .filter((header) => header !== 'nome')\r\n                .map((year) => (\r\n                  <option key={year} value={year}>\r\n                    {year}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n    \r\n          <Chart\r\n            options={options}\r\n            series={filteredDataForChart}\r\n            type=\"line\"\r\n            height={500}\r\n            width={500}\r\n          />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LineChart;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}